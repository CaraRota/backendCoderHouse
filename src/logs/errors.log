{"level":"fatal","message":"Esto es un logger de fatal","timestamp":"2023-11-11T17:33:32.856Z"}
{"level":"error","message":"Esto es un logger de error","timestamp":"2023-11-11T17:33:32.858Z"}
{"level":"warn","message":"Esto es un logger de warn","timestamp":"2023-11-11T17:33:32.858Z"}
{"level":"fatal","message":"Server listening on port 8080","timestamp":"2023-11-11T17:34:49.696Z"}
{"level":"error","message":"\n    One or more properties were incomplete or not valid.\n    List of required properties:\n    * first_name: needs to be a String, received Pepe\n    * last_name: needs to be a String, received undefined\n    * email: needs to be a String, received pe12333pe@pepe.com\n    ","timestamp":"2023-11-11T17:37:33.678Z"}
{"level":"error","message":"\n    One or more properties were incomplete or not valid.\n    List of required properties:\n    * name: needs to be a String, received Arroz\n    * description: needs to be a String, received undefined\n    * price: needs to be a Number, received undefined\n    * stock: needs to be a Number, received undefined\n    * code: needs to be a String, received undefined\n    * category: needs to be a String, received undefined\n    ","timestamp":"2023-11-11T17:37:44.092Z"}
{"level":"error","message":"Usuario no encontrado: canalsdigsdfsdfital@gmail.com","timestamp":"2023-11-22T17:30:01.088Z"}
{"level":"error","message":"Token no encontrado: a8980c3666e5111b707bc28c489f62a84aa17fe4","timestamp":"2023-11-22T17:37:48.289Z"}
{"level":"error","message":"Error al modificar contrase単a: TypeError: user.comparePassword is not a function","timestamp":"2023-11-22T17:42:27.364Z"}
{"level":"error","message":"Token no encontrado: eb6a58c3ca681e0ccf78690e8c83a400188a1fce","timestamp":"2023-11-22T17:43:52.755Z"}
{"level":"error","message":"Error al modificar contrase単a: TypeError: user.validatePassword is not a function","timestamp":"2023-11-22T17:44:17.796Z"}
{"level":"error","message":"Token no encontrado: 6066a2287262853b0c69fbdd54e2c47f3915bb4d","timestamp":"2023-11-22T17:46:49.011Z"}
{"level":"error","message":"La nueva contrase単a no puede ser igual a la anterior","timestamp":"2023-11-22T17:49:25.910Z"}
{"level":"error","message":"Error al enviar email: Error: Missing credentials for \"PLAIN\"","timestamp":"2023-11-27T20:17:01.786Z"}
{"level":"error","message":"Error al enviar email: Error: Missing credentials for \"PLAIN\"","timestamp":"2023-11-27T20:33:35.365Z"}
{"level":"error","message":"Error al enviar email: Error: Missing credentials for \"PLAIN\"","timestamp":"2023-11-27T20:33:39.963Z"}
{"level":"error","message":"Error al enviar email: Error: Missing credentials for \"PLAIN\"","timestamp":"2023-11-27T20:34:22.873Z"}
{"level":"error","message":"Error al enviar email: Error: Missing credentials for \"PLAIN\"","timestamp":"2023-11-27T20:34:52.478Z"}
{"level":"error","message":"Token no encontrado: 6b22139806f9e0a7e2c95d4856d3bba6278d15db","timestamp":"2023-11-27T20:40:14.124Z"}
{"level":"error","message":"La nueva contrase単a no puede ser igual a la anterior","timestamp":"2023-11-27T20:42:16.466Z"}
{"level":"error","message":"Error al conectar a la BDD Mongo (test mode): MongooseError: The `uri` parameter to `openUri()` must be a string, got \"object\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.","timestamp":"2023-12-07T12:50:04.296Z"}
{"level":"error","message":"Error al conectar a la BDD Mongo (test mode): MongooseError: The `uri` parameter to `openUri()` must be a string, got \"object\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.","timestamp":"2023-12-07T12:50:31.963Z"}
{"level":"error","timestamp":"2023-12-07T14:43:11.335Z"}
{"level":"error","timestamp":"2023-12-07T14:43:11.338Z"}
{"level":"error","message":"Login error: jwt.sign is not a function","stack":"TypeError: jwt.sign is not a function\n    at Strategy._verify (file:///C:/Users/Sebastian/Desktop/githubClones/backendCoderHouse/src/config/passport.js:80:35)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2023-12-07T14:51:21.062Z"}
{"level":"error","timestamp":"2023-12-07T14:51:21.064Z"}
{"level":"error","message":"Login error: jwt.sign is not a function","stack":"TypeError: jwt.sign is not a function\n    at Strategy._verify (file:///C:/Users/Sebastian/Desktop/githubClones/backendCoderHouse/src/config/passport.js:80:35)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2023-12-07T14:52:34.055Z"}
{"level":"error","timestamp":"2023-12-07T14:52:34.057Z"}
{"level":"error","message":"\n    One or more properties were incomplete or not valid.\n    List of required properties:\n    * name: needs to be a String, received undefined\n    * description: needs to be a String, received undefined\n    * price: needs to be a Number, received undefined\n    * stock: needs to be a Number, received undefined\n    * code: needs to be a String, received undefined\n    * category: needs to be a String, received undefined\n    ","timestamp":"2023-12-07T15:05:22.118Z"}{"level":"error","timestamp":"2023-12-07T16:55:38.239Z"}
{"level":"error","timestamp":"2023-12-07T16:55:38.241Z"}
{"level":"error","timestamp":"2023-12-07T16:57:12.939Z"}
{"level":"error","timestamp":"2023-12-07T16:57:12.941Z"}
{"level":"error","timestamp":"2023-12-07T16:58:11.957Z"}
{"level":"error","timestamp":"2023-12-07T16:58:11.959Z"}
{"level":"error","timestamp":"2023-12-07T17:02:42.418Z"}
{"level":"error","timestamp":"2023-12-07T17:02:42.420Z"}
{"level":"error","message":"\n    One or more properties were incomplete or not valid.\n    List of required properties:\n    * first_name: needs to be a String, received undefined\n    * last_name: needs to be a String, received undefined\n    * email: needs to be a String, received tester@testing.com\n    ","timestamp":"2023-12-07T19:45:23.147Z"}
{"level":"error","message":"\n    One or more properties were incomplete or not valid.\n    List of required properties:\n    * first_name: needs to be a String, received undefined\n    * last_name: needs to be a String, received undefined\n    * email: needs to be a String, received tester@testing.com\n    ","timestamp":"2023-12-07T19:46:54.312Z"}
{"level":"error","message":"\n    One or more properties were incomplete or not valid.\n    List of required properties:\n    * first_name: needs to be a String, received undefined\n    * last_name: needs to be a String, received undefined\n    * email: needs to be a String, received tester@testing.com\n    ","timestamp":"2023-12-07T19:47:30.573Z"}
{"level":"error","message":"\n    One or more properties were incomplete or not valid.\n    List of required properties:\n    * first_name: needs to be a String, received undefined\n    * last_name: needs to be a String, received undefined\n    * email: needs to be a String, received tester@testing.com\n    ","timestamp":"2023-12-07T19:47:47.123Z"}
{"level":"error","message":"\n    One or more properties were incomplete or not valid.\n    List of required properties:\n    * first_name: needs to be a String, received undefined\n    * last_name: needs to be a String, received undefined\n    * email: needs to be a String, received tester@testing.com\n    ","timestamp":"2023-12-07T19:48:46.852Z"}
{"_message":"users validation failed","errors":{"age":{"kind":"required","message":"Path `age` is required.","name":"ValidatorError","path":"age","properties":{"message":"Path `age` is required.","path":"age","type":"required"}}},"level":"error","timestamp":"2023-12-18T12:27:37.331Z"}
{"level":"error","timestamp":"2023-12-18T12:27:37.334Z"}
{"_message":"users validation failed","errors":{"age":{"kind":"required","message":"Path `age` is required.","name":"ValidatorError","path":"age","properties":{"message":"Path `age` is required.","path":"age","type":"required"}}},"level":"error","timestamp":"2023-12-18T15:03:30.531Z"}
{"level":"error","timestamp":"2023-12-18T15:03:30.533Z"}
